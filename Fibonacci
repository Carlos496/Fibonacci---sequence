# fibonacci.py
def fibonacci(n):
    fib_sequence = []
    a, b = 0, 1
    for _ in range(n):
        fib_sequence.append(a)
        a, b = b, a + b
    return fib_sequence

# Ejemplo de uso
if __name__ == "__main__":
    n = int(input("Introduce el valor de n: "))
    print(f"La sucesi贸n de Fibonacci para n={n} es: {fibonacci(n)}")

git clone https://github.com/Carlos 496/fibonacci-sequence.git
cd fibonacci-sequence
git checkout -b rama 1
# fibonacci_iterativo.py
def fibonacci(n):
    fib_sequence = []
    a, b = 0, 1
    for _ in range(n):
        fib_sequence.append(a)
        a, b = b, a + b
    return fib_sequence

if __name__ == "__main__":
    n = int(input("Introduce el valor de n: "))
    print(f"La sucesi贸n de Fibonacci para n={n} es: {fibonacci(n)}")


git checkout -b rama 2
# fibonacci_recursivo.py
def fibonacci(n):
    if n <= 0:
        return []
    elif n == 1:
        return [0]
    elif n == 2:
        return [0, 1]
    else:
        seq = fibonacci(n - 1)
        seq.append(seq[-1] + seq[-2])
        return seq

if __name__ == "__main__":
    n = int(input("Introduce el valor de n: "))
    print(f"La sucesi贸n de Fibonacci para n={n} es: {fibonacci(n)}")

git checkout -b rama 3
# fibonacci_dinamico.py
def fibonacci(n):
    if n <= 0:
        return []
    elif n == 1:
        return [0]
    elif n == 2:
        return [0, 1]

    fib_sequence = [0, 1]
    for i in range(2, n):
        fib_sequence.append(fib_sequence[i - 1] + fib_sequence[i - 2])
    
    return fib_sequence

if __name__ == "__main__":
    n = int(input("Introduce el valor de n: "))
    print(f"La sucesi贸n de Fibonacci para n={n} es: {fibonacci(n)}")
